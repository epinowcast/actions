name: 'Install CmdStan with caching'
description: 'Install CmdStan with caching'
inputs:
  cmdstan-version:
    description: 'CmdStan version to install (use "latest" for the latest version)'
    required: false
    default: 'latest'
  num-cores:
    description: 'Number of cores to use for building CmdStan'
    required: false
    default: '1'

runs:
  using: 'composite'
  steps:
    - name: Determine CmdStan Version (Unix)
      if: runner.os != 'Windows' && inputs.cmdstan-version == 'latest'
      run: |
        version=$(curl -s https://api.github.com/repos/stan-dev/cmdstan/releases/latest | awk -F '"' '/tag_name/{print $4}' | sed 's/^v//')
        echo "CMDSTAN_VERSION=$version" >> $GITHUB_ENV
      shell: bash

    - name: Determine CmdStan Version (Windows)
      if: runner.os == 'Windows' && inputs.cmdstan-version == 'latest'
      run: |
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/stan-dev/cmdstan/releases/latest"
        $version = $response.tag_name -replace '^v', ''
        echo "CMDSTAN_VERSION=$version" | Out-File -Append -FilePath $env:GITHUB_ENV
      shell: pwsh

    - name: Set CmdStan Version (Specified)
      if: inputs.cmdstan-version != 'latest'
      run: echo "CMDSTAN_VERSION=${{ inputs.cmdstan-version }}" >> $GITHUB_ENV
      shell: bash

    - name: Restore Cache
      id: cache-cmdstan
      uses: actions/cache@v4
      with:
        path: '.cmdstan/cmdstan-${{ env.CMDSTAN_VERSION }}'
        key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN_VERSION }}
 
    - name: Install CmdStan (Unix)
      if: runner.os != 'Windows' && steps.cache-cmdstan.outputs.cache-hit != 'true'
      run: bash ${{ github.action_path }}/scripts/install_cmdstan.sh ${{ env.CMDSTAN_VERSION }} ${{ inputs.num-cores }}
      shell: bash

    - name: Install CmdStan (Windows)
      if: runner.os == 'Windows' && steps.cache-cmdstan.outputs.cache-hit != 'true'
      run: pwsh ${{ github.action_path }}/scripts/install_cmdstan_win.ps1 -version ${{ env.CMDSTAN_VERSION }} -numCores ${{ inputs.num-cores }}
      shell: pwsh
